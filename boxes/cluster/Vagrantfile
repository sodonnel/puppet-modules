# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  $script = <<SCRIPT
    echo "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain" > /etc/hosts
    echo "::1         localhost localhost.localdomain localhost6 localhost6.localdomain6" >> /etc/hosts
    echo "192.168.33.5  master"  >> /etc/hosts
    echo "192.168.33.6  dn1"  >> /etc/hosts
    echo "192.168.33.7  dn2"  >> /etc/hosts
    echo "192.168.33.8  dn3"  >> /etc/hosts
    echo "192.168.33.9  dn4"  >> /etc/hosts
SCRIPT

  cdh_version = '5.5.1'
  secure_cluster = 'false'
  
  config.vm.provision "shell", inline: $script

  config.vm.define "dn1" do |cm|
    cm.vm.box = "base-box"
    cm.vm.network "private_network", ip: "192.168.33.6"
    cm.vm.hostname = 'dn1'
    cm.vm.provider "virtualbox" do |vb|
      vb.name = 'dn1'
      vb.memory = 2048
      vb.cpus   = 2
    end
    cm.vm.synced_folder "../..", "/puppet_modules"
    cm.vm.provision "shell", inline: $script
    cm.vm.provision "puppet" do |puppet|
      puppet.facter = {
        "cdh_version"  => cdh_version,
        "cdh_secure"   => secure_cluster
      }
      puppet.manifests_path   = "../../manifests"
      puppet.manifest_file    = "cdh5.pp"
      puppet.module_path      = "../../modules"
      puppet.options          = "--verbose"
    end
  end
  

  config.vm.define "master" do |cm|
    cm.vm.box = "base-box"
    cm.vm.network "private_network", ip: "192.168.33.5"
    cm.vm.hostname = 'master'
    cm.vm.provider "virtualbox" do |vb|
      vb.name = 'cm'
      vb.memory = 2048
      vb.cpus   = 2 
    end
    cm.vm.synced_folder "../..", "/puppet_modules"
    cm.vm.provision "shell", inline: $script
    cm.vm.provision "puppet" do |puppet|
      puppet.facter = {
        "cdh_version"  => cdh_version,
        "cdh_secure"   => secure_cluster
      }
      puppet.manifests_path   = "../../manifests"
      puppet.manifest_file    = "cdh5.pp"
      puppet.module_path      = "../../modules"
      puppet.options          = "--verbose"
    end
  end

  config.vm.define "dn3" do |cm|
    cm.vm.box = "base-box"
    cm.vm.network "private_network", ip: "192.168.33.8"
    cm.vm.hostname = 'dn3'
    cm.vm.provider "virtualbox" do |vb|
      vb.name = 'dn3'
      vb.memory = 2048
      vb.cpus   = 2
    end
    cm.vm.synced_folder "../..", "/puppet_modules"
    cm.vm.provision "shell", inline: $script
    cm.vm.provision "puppet" do |puppet|
      puppet.facter = {
        "cdh_version"  => cdh_version,
        "cdh_secure"   => secure_cluster
      }
      puppet.manifests_path   = "../../manifests"
      puppet.manifest_file    = "cdh5.pp"
      puppet.module_path      = "../../modules"
      puppet.options          = "--verbose"
    end
  end



#  config.vm.define "dn2" do |cm|
#    cm.vm.box = "base-box"
#    cm.vm.network "private_network", ip: "192.168.33.7"
#    cm.vm.hostname = 'dn2'
#    cm.vm.provider "virtualbox" do |vb|
#      vb.name = 'dn2'
#      vb.memory = 2048
#      vb.cpus   = 2
#    end
#  end
#
#  config.vm.define "dn3" do |cm|
#    cm.vm.box = "base-box"
#    cm.vm.network "private_network", ip: "192.168.33.8"
#    cm.vm.hostname = 'dn3'
#    cm.vm.provider "virtualbox" do |vb|
#      vb.name = 'dn3'
#      vb.memory = 2048
#      vb.cpus   = 2
#    end
#  end   

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "base-box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
#  config.vm.network "private_network", ip: "192.168.33.5"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
#  config.vm.provider "virtualbox" do |vb|
#     # Display the VirtualBox GUI when booting the machine
#     #vb.gui = true
#     vb.name = "basic"
#     vb.cpus = 2
#  
#    # Customize the amount of memory on the VM:
#     vb.memory = "4096"
#  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
