<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>

<property>
  <name>hbase.cluster.distributed</name>
  <value>true</value>
</property>

<property>
  <name>hbase.rootdir</name>
  <value>hdfs://<%= @namenode -%>/hbase</value>
</property>

<property>
  <name>hbase.zookeeper.quorum</name>
  <value><%= @zookeeper -%></value>
</property>

<property>
   <name>hbase.replication</name>
   <value>true</value>
</property>

 <!-- Source ratio of 100% makes sure that each SEP consumer is actually
       used (otherwise, some can sit idle, especially with small clusters) -->
<property>
  <name>replication.source.ratio</name>
  <value>1.0</value>
</property>

<!-- Maximum number of hlog entries to replicate in one go. If this is
     large, and a consumer takes a while to process the events, the
     HBase rpc call will time out. -->
<property>
  <name>replication.source.nb.capacity</name>
  <value>1000</value>
</property>


<!-- These parameters are best left to default, but tweak them for
     experimenting with WAL rolls etc -->
<!-- how often to roll WAL. Default is 1hr 3600000 -->
<!--
<property>
  <name>hbase.regionserver.logroll.period</name>
  <value>60000</value>
</property>
-->

<!-- flush memstore when it gets to this size. Default is 134217728 (128MB?) -->
<!--
<property>
  <name>hbase.hregion.memstore.flush.size</name>
  <value>10000000</value>
  <description>
    Memstore will be flushed to disk if size of the memstore
    exceeds this number of bytes. Value is checked by a thread that runs
    every hbase.server.thread.wakefrequency.
  </description>
</property>
-->

<!-- Time oldWALs are kept after they are nolonger required. Default 600000 (10 mins) -->
<!--
<property>
  <name>hbase.master.logcleaner.ttl</name>
  <value>30000</value>
  <description>
    Memstore will be flushed to disk if size of the memstore
    exceeds this number of bytes. Value is checked by a thread that runs
    every hbase.server.thread.wakefrequency.
  </description>
</property>
-->

<% if @isSecure %>

<property>
  <name>hbase.security.authentication</name>
  <value>kerberos</value>
</property>

<property>
  <name>hbase.coprocessor.master.classes</name>
  <value>org.apache.hadoop.hbase.security.access.AccessController</value>
</property>

<property>
  <name>hbase.coprocessor.region.classes</name>
  <value>org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController</value>
</property>

<property>
  <name>hbase.regionserver.kerberos.principal</name>
  <value>hbase/_HOST@EXAMPLE.COM</value>
</property>

<property>
  <name>hbase.regionserver.keytab.file</name>
  <value>/etc/hbase/conf/hbase.keytab</value>
</property>

<property>
  <name>hbase.master.kerberos.principal</name>
  <value>hbase/_HOST@EXAMPLE.COM</value>
</property>

<property>
  <name>hbase.master.keytab.file</name>
  <value>/etc/hbase/conf/hbase.keytab</value>
</property>

<property>
  <name>hbase.thrift.keytab.file</name>
  <value>/etc/hbase/conf/hbase.keytab</value>
</property>

<property>
  <name>hbase.thrift.kerberos.principal</name>
  <value>hbase/standalone@EXAMPLE.COM</value>
</property>

<property>
  <name>hbase.thrift.security.qop</name>
  <value>auth</value>
</property>

<property>
  <name>hbase.zookeeper.client.keytab.file</name>
  <value>/etc/hbase/conf/hbase.keytab</value>
</property>

<% end %>

</configuration>
